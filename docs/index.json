[{"categories":["hobby"],"contents":"はじめに そもそも、マークダウン記法を使っての記述が初めてなのと、プログラミング周りで今すぐ書けるトピックがないので、とりあえず自分の趣味の一つである音楽から、好きなバンドについて簡単に記述してみて、マークダウン記法にも慣れていこうと思います。\nthe HIATUS 自分が聴く音楽の中で好きなアーティスト\u0008・バンドを考えたときに必ず浮かぶのがthe HIATUSという日本のロックバンドです。\nthe HIATUSは、２００８年に活動休止となったELLEGARDEN（２０１８年に活動再開）のボーカル細美武士が翌年の２００９年に結成しました。\nメンバーは、ウエノコウジ（THEE MICHELLE GUN ELEPHANTのベーシスト）、伊澤一葉（東京事変のキーボード）など有名かつ凄腕なアーティストを含めた５人で構成されています。\nちなみにボーカルとサイドギターを務める細美武士は、自分が尊敬する人物の一人で、大大大好きなので機会があったら細美武士を語る記事を書くかもしれません。\nバンドのジャンルとしてはオルタナティブロックが軸になっていますが、作品をリリースする都度、異なるジャンルの要素が取り入れられ変化していくため、最初のアルバムから最新のアルバムへと聴き進めて行くとバンドの進化・深化がわかるでしょう。\n好きな曲３選 もう、この記事は自己満の世界で書こうと思うので、他人にthe HIATUSを知ってもらうときに「この曲から聴き始めると聴きやすいよ\u0008〜」なんて紹介のしかたはせずに、自分がただ好きな曲を（YouTubeの公式チャンネルでアップされてる曲から）３曲あげて自分の頭と心の中を整理する場にします。\nそれと、もともこもない話ですが正直このバンドの曲は全曲好きです。\n１.Bittersweet/Hatching Mayflies \nこの楽曲がリリースされたのは２０１１年の６月で、同年の３月には東日本大震災がありました。\n高校生だった当時住んでいた福島県の地元は、幸いにも当時毎日のようにニュースで報道されていた被災地ほどの大きな被害を受けたエリアではありませんでしたが、やはり不安でどこか暗く寂しい気持ちで過ごしていたのを覚えています。\nそんな時に大好きなバンドからリリースされたこの曲は「ハイテンションでお気楽に元気に！暗い気持ちなんて吹き飛ばせ！」なんて曲ではなく、薄暗く肌寒い白黒の世界観なのに暖炉の火にあたっているような、暖かくて心地よく、優しく寄り添ってくれるけど力強い印象を受けた曲でした。（意味わかんないか、でもいい。）\n２.Twisted Maple Trees \nこの曲はファーストアルバム「Trash We\u0026rsquo;d Love」の最後の曲として収録されています。前半の穏やかな曲調から後半になるにつれて激しくエモーショナルなテンションへと変化して行きます。\nこの曲を好きになったのは大学生になって上京してきて、人生で初めて見たthe HIATUSのライブ（NHKホール）での演奏を聴いたのがきっかけでした。当然アルバムで聴いて知ってはいたものの、生の迫力と熱量に圧倒され、その日一番バンドの気持ちがこもっていて、カッコ良く自分の目に映り聴こえてきたのがこの曲でした。\nなぜか韓国でのライブ映像がバンドの公式チャンネルからアップされており、個人的には非常にありがたい動画になっています。特別なカメラワークを施して編集を行っている訳でもないのにメチャクチャカッコいいです！！（ちなみにこの曲の後に演奏されている「Insomnia」はライブでも良く演奏されておりウケのいい曲で、自分も大好きです。こっちの方が客が盛り上がりやすい曲ですね・・・）\n３.Horse Riding \nこの曲は２０１３年の７月にEPとしてリリースされ、その後２０１４年の３月にリリースされたフォースアルバム「Keeper Of The Flame」にも収録されています。\nEPが発売されてすぐリリースツアーが行われ、このライブにも当然参戦しましたが、ライブハウスでライブを見るのは初めてで、しかも一人だったため不安と期待で精神がめちゃくちゃだったのを覚えています。\nライブが始まると、通勤時の満員電車よりも密な状態でひたすら飛び跳ね、頭の上を老若男女さまざまな人が転がっていく異世界に衝撃を受けました。DVDで見るのと生で体験するのでは全くの別物で、体験に勝るものはないなと強く感じ、この日からライブハウスが大好きになりました。（早くコロナが終息してほしいです）\nHorse Ridingはイントロの歌い出しと共に鳴るアコギのフレーズが印象的な曲です。作詞をした細美武士がライブMCか何かで、「若かった当時、バイクに乗っている間は嫌なことも忘れ無敵に思えたことを書いた曲」のような発言をしていました。実際、詞自体は馬に跨っている姿や戦争、革命などを想起させる内容になっていて、勇気が湧いてくる（＝無敵になれる）ように感じ取れます。\n Revolution needs a soundtrack\n（革命にはサウンドトラックが必要だろ）\n という一節もあり、自分の気持ちを前へ前へとおしてくれる応援歌だと思っています。\nさいごに the HIATUSは（というより、細美武士が）極度にテレビメディアへの出演を嫌っており、世間への露出が少ないバンドであるため、多くの人には認知されていないバンドです。\nしかしバンド結成時から、毎年数多くのライブフェスへ出演したり高いパフーマンスのライブを行い続けており、根強いファンが多い為、ワンマンライブ時のチケットは争奪戦でなかなか当選しないファンも多数います。\n個人的にはバンドの良さは多くの人に知ってほしいですが、これ以上有名になったり人気になって欲しくないというのが本音です。\n","permalink":"https://practice-member.github.io/nandemo-output-blog/blog/post-7/","tags":["",""],"title":"好きなバンドをただ語る"},{"categories":["Docker","docker-compose"],"contents":"コンテナ名を指定する イメージを利用しない場合はビルド指定する コンテナ同士の依存関係がある場合は起動順序を指定する 永続的なデータやファイルがある場合はvolumesを指定する コンテナ同士の疎通がある場合はnetworksを利用する docker-composeを分割しコンテナ間の疎通がある場合のnetworks指定方法 明記するnetworks名はプレフィックスを忘れないようにする\nBAD\nworks-net\rGOOD\nexternal_works-net\rコンテナを起動したままにさせる ttyオプションを付与する\nまとめ Dockerを利用して開発するうえで、\ndocker-composeは大変便利です。\nひとつのDockerコンテナで完結する開発であれば、\n不要になる話ですが、基本的に複数のコンテナを利用することが多くなると思われます。\nコンテナをまとめて管理するのにdocker-composeは、\n簡単であり便利だと認識しています。\n","permalink":"https://practice-member.github.io/nandemo-output-blog/blog/post-4/","tags":["",""],"title":"docker-composeのトピックス"},{"categories":["Docker"],"contents":"イメージサイズは出来るだけ軽くする  scratchやalpineなど軽量なベースイメージを選択する ランタイムに必要なファイルのみCOPYする 不要なパッケージのインストールを控える レイヤを減らす  レイヤの減らし方  RUNで実行する場合は、\u0026amp;\u0026amp;で連結させる マルチステージビルドを利用する  マルチステージビルドを利用した例  ADDを利用したアンチパターン  BADパターン\nGOODパターン\nビルドキャッシュを正しく活用する イメージをビルドする際、キャッシュ内で再利用出来るイメージを探します。\nなければイメージのキャッシュは削除されます。\n以下のコードはBADのほうがレイヤが少ないためGOODに見えますが、\nappに変更が発生するたびに、ライブラリのインストールが実施されビルド時間が長くなります。\nBADパターン\nGOODパターン\nまとめ Dockerは自分のpc環境を汚さずに開発出来るだけでなく、\n開発環境を高速に構築出来る最高のツールだと考えています。\nしかし、イメージのサイズやキャッシュ/ビルドなどを考えずに\n利用していると、pcのディスク容量が逼迫していきます。\nビルド時間も高速化を検討しないと、\n開発する時間がとれなくなってしまいます。\nDockerを便利に利用するために、\nこれからもベストプラクティスを考えていこうと思います。\n","permalink":"https://practice-member.github.io/nandemo-output-blog/blog/post-3/","tags":["",""],"title":"Dockerfileのベストプラクティスを考えてみた"},{"categories":["Docker"],"contents":"経緯 「Dockerを使用するメリットがわからない」という質問を受けたので、\nDockerを使うと何が嬉しいか、とても簡潔に説明します。\nDockerのメリットを全てを解説するわけではなく、\n学習する上で取っ掛かりになればいいなと思って書いたものです。\nDockerとは 詳しくはこちらを御覧ください。\nざっくりいうと、「軽量で起動の早い、仮想環境を簡単に作れるソフトウェア」です。\nコンテナってなに？ 上記の解説を読むと、Dockerについて以下のように説明されています。\n Dockerは、インフラ関係やDevOps界隈で注目されている技術の一つで、 Docker社が開発している、コンテナ型の仮想環境を作成、配布、実行するためのプラットフォームです。\n ではこのコンテナってなんでしょうか。\nイメージを掴みましょう。\nざっくり解説すると、コンテナとはDockerで作れる仮想空間だと思ってください。\n一般的にWindowsPCにLinuxOSをインストールすることはできませんよね。\n(ここではWSL2については触れません。。。)\nしかしコンテナを使用すると、できてしまいます。\nローカルPCとは全く切り離された仮想空間をコンテナ内に作り、\nその中に別のOSをインストールすることができるのです。\nコンテナ内にOSが用意でき、そのOSに様々なソフトウェアをインストールさせられます。\n便利ですね。\nイメージを掴んだ後はこちらのような解説サイトで詳しく学ぶことをオススメします。\nコンテナの由来 Dockerで使われているコンテナという技術は、運送業界で使われているコンテナに由来していると言われています。\nよくアクション映画で港でドンパチやるときに周りに沢山おいてあるこれです。\nこのコンテナは規格が統一されていて、\n規格にあったシャーシさえあればトラックにも電車にも飛行機にも、\n何にでも載せることができます。\nコンテナが何に積まれているかは関係ありませんし、コンテナの中身が外部に影響を与えることもありません。\nこの可搬性をシステム上で再現したものがコンテナ技術です。\n話をDockerに戻して当てはめて考えてみると、以下のようになります。\n「コンテナの中身が何であろうと、\nDockerというシャーシさえインストールされていれば、LinuxでもMacでもWindowsでもクラウドでもどんな環境にもコンテナを載せることができる。」\n残念ながら、現実のコンテナのように、\n「コンテナが何に積まれているかは関係なく、コンテナの中身が外部に影響を与えることもない。」レベルでの可搬性はないのですが、\n目指しているのはその可搬性です。\nDockerを使うと何が嬉しいか ここで本題です。\nDockerのメリットは多々あります。\n生成や破棄が容易であったり、ミドルウェアも含めた構成を簡単に他人とシェアできたり。\n今までの仮想化技術では、\nゲストOS起動時にハードウェアのチェックなども行うので起動が遅かったが、\nコンテナではそれがないので早いなど。\nただここでは可搬性にフォーカスして解説します。\n現在多くのサーバーにはLinuxが使われています。\nですがシステム開発ではWindowsやMacが使用されています。\n本番環境と開発環境で環境が違うわけです。\nそうするとしばしば\n「Windows環境では動いたけどLinuxでは動かなくなった」\nという事象が発生します。\n最近では、\n「ローカル環境では動いたけどクラウド環境だと動かない」\nといった事象も耳にします。\nそこでDockerを使用します。\nコンテナの可搬性を活かし、\n環境間の差異をなくすことで、環境差に起因するエラーを極力減らすことができるのです。\nさいごに とても簡潔で必要な解説まで削ぎ落としている感を持ってこの記事を書いています。\nあくまで初めはこの程度の理解でいいというレベルです。\nこの記事が更なる学習の端緒に慣れば幸いです。\n","permalink":"https://practice-member.github.io/nandemo-output-blog/blog/post-2/","tags":["",""],"title":"Dockerを使うメリットを最低限の説明に絞って解説してみる"},{"categories":["Gadget"],"contents":"はじめに アウトプットする習慣を付けるためのブログということで最初の記事はガチガチの技術は避けて、\n「駆け出しエンジニアによる駆け出しエンジニアのためのノートPC選定観点メモ」を書き流して行こうと思います。\n前提として、プログラミングを行うノートPCを選定する観点です。\nまた、本記事を書いてる人がWindows派なので、基本Windowsのことを書いています。\n主に仕事で使っているPCはDynaBook UZ63/Dです。\nあくまでも経験年数少ない駆け出しの個人的な選定観点メモなので、参考程度のものです。\nOS 駆け出しエンジニアがノートPCを買うとき候補に上がるのはMacとWindowsかと思います。\n目的に合わせて自由に選んで良いと思います。\n  Macを選ぶべき人\n iOSアプリを作りたい人 デザインの勉強もしたい人 単純にMacが好き人    Windowsを選ぶべき人\n なるべく低コストでスペックの良いノートPCがほしい人 現場で使うノートPCのOSに慣れておきたい人    SESの場合、現場で支給されるノートPCの殆どはWindowsです。\n私としては、やりたいことがハッキリしていないのならば、\n最初の1台目はとりあえずコスパの良いWindowsを買うなり借りるなりして、\n将来的にMacも増やすのがベターなのかなと思ってます。\nMacは高いので。。。\nCPU Intel製のCPUの場合、i7 ,i5 ,i3 等の「Core iシリーズ」から選ぶのが良いですが、\n同時に世代にも注目したいです。\n新しい世代のCPUのほうが性能がいいです。\n私は下記のようなサイトを参考にCPUを選びました。\n 【Intel CPU】Core i9, Core i7, Core i5, Core i3の世代の一覧・見分け方のまとめ\nhttps://pssection9.com/archives/intel-corei7-corei5-corei3-gen-list-how-to-identify.html\n 予算が許すならできるだけ新しい世代のi7がいいです。\n第7世代のi7と第8世代のi3ならどちらが良いのかなどを詳しく比較したいなら、\n「CPU スコア」 などで検索してみると定量的なCPU性能比較が見られるのでおすすめです。\nその一方でCPUの性能の最低基準ですが、\n2020/12/31現在、私の所属会社では第5世代i5が最低基準となっているようです。\n私は一時期第5世代i5のノートPCでDocker使用し、\nnginx + Angular + Spring Boot + MySQLで社内開発を行っていましたが、\n確かに問題なく使用できていました。\n第5世代i5搭載のノートPCは中古で安価に買えるので、長持ちするかは運ですが選択肢としては有りです。\nまた、最近はIntel社の他にAMD社のCPUを搭載したノートPCをよく見ます。\n一昔前は、AMDの場合はAndroid StudioのエミュレータやDocker DeskTopが使えないといった不便がありました。\n今はAMDのシェアが増えたこともあってか環境が改善されつつありますが、\n別途AMD用に設定を行わないといけなかったり面倒そうな場面が見受けられます。\nトラブルシューティングの自信がない人はIntelが無難かもしれません。\nただAMDのCPU搭載ノートPCのほうが安価なので、下記のサイトのような情報を参考にしつつ、\n購入の選択肢に入れても良いと思います。\n 「Core i」と「Ryzen」の違いを比較【ざっくり解説】 https://pcfreebook.com/article/corei-ryzen-comparison-difference.html\n メモリ 8GBが最低基準です。\nブラウザのタブを沢山開いて調べ物をしつつプログラミングをするなら16GBを選んだほうが快適です。\n加えて、もしメモリを増設したいと考えているなら、\n購入したいノートPCがメモリ増設に対応しているか確認することが大事です。\n増設できない設計になっていたり、\nオンボードといってメモリがマザーボードに直接固定されているノートPCがあります。\nまた、2020/12/31現在、メモリの最大搭載容量が16GBのノートPCがとても多いです。 32GB積みたい場合はその観点からの調査が必要です。\n余談ですが、メモリを購入、増設する際には以下の点をよく確認してから作業をするのが良いです。\n 購入予定のメモリは、デスクトップ用か、ノートPC用か 購入予定のメモリは、搭載予定のノートPCのCPUに対応した規格のメモリか  メモリにも規格があるので注意が必要です。\n私は以下のサイトなどを参考にメモリを選びました。\n DDR4メモリとDDR3メモリの違いについて\nhttps://pssection9.com/archives/ddr4-ddr3-memory-difference.html\n ストレージ SSD搭載のものを選び、できれば256GB以上の容量が良いです。\nHDDはSSDと比べると低速なので私は選びません。\n中古の場合、新しめのノートPCでもHDDものもがあるので要確認です。\n容量について、128GBのノートPCを使ったことがありましたが、\nプログラミングに必要なアプリを揃えるだけで結構容量を食ってしまいました。 結局500GBのものに交換しました。\nストレージもメモリと同じく、\nオンボードで固定されていて後からSSDの交換ができないノートPCがありますので注意が必要です。\n解像度 フルHD以上が良いと考えています。\nHDなどの解像度が低いノートPCはそれだけ画面に表示できる情報量が少なくなります。\nフルHD以上の解像度が高いノートPCでは文字が小さくなるなどデメリットはありますが、\n一画面に表示できる情報量が作業効率に与える影響を考えるとフルHD以上を私は選んでいます。\n以下のようなサイトがわかりやすいかもしれません。\n フルＨＤとは？解像度とは？パソコンの解像度はどうやって選べはよい？ http://check-pc.com/pc/page6.html\n 液晶の大きさ ノートPCのなかで15.6インチのものが最もコスパが良いです。\n画面が大きく作業がしやすいのも良い点です。\nただ15.6インチは持ち歩くには大きいです。\n重さは2kg前後のものが多いです。\n13.3インチがA4サイズ、重さは1kgちょっとと持ち歩きやすいので、普段ノートPCを持ち歩く人や、\n休日スタバでドヤ顔でプログラミング(通称ドヤグラミング)をしたい人は13.3インチ前後がオススメです。\nできれば実物を見て確認した点です。\n液晶の光沢 液晶のには光沢液晶と非光沢液晶があります。\n光沢液晶は色が鮮やかに表現されますが、画面の映り込みが多いのがデメリットです。 映り込みが多いと目が疲れます。\n私はプログラミングをするなら非光沢液晶のものを選びます。\nキーボード配列 ノートPCの中には独特のキーボード配列を採用しているメーカーがあります。\n レノボのキーボードは、左下のCtrlとFNキーの位置が逆になっています(BIOSから変更できるらしい) パナソニックのLet\u0026rsquo;snoteシリーズでは、\nCtrlとFNキーが逆なことに加え、半角/全角の切り替えキーがF1キーの隣にあります HPのキーボードはBackSpace-Enter列の右側に更に一列キーが存在しています  他にも英語配列だったりエンターキーが小さかったりと癖があるキーボードのノートPCがあります。\n慣れれば問題ない、外付けキーボードを使えばいい等の話はありますが、\n生産性に直結する箇所なのでできるだけしっかり確認してから買いたいです。\nディスプレイの開閉角度 私は肩こりが酷いので、ノートPCを使うときはノートPCスタンドを使用して視点を上げています。\nノートPCスタンドを使うときはノートPCのお尻を持ち上げる分だけPCの画面を大きく開かなくてはいけません。\nもし不自由なくノートPCスタンドを使いたいなら、180°液晶の開くPCが良いです。\nまた他人にPC画面を見せる場面が多い人は、360°液晶が回るノートPCが良いかもしれません。\nその他 中古のノートPCのなかには、HDMI端子がないPCやBluetoothがないPCがあります。\nBluetoothがついてるとそれだけUSBポートを使わずに済んだり、\nコードで接続する手間がなくなったりするのでできればついていてほしいです。 プロジェクターに画面を写す機会がある人はHDMIの確認も必要です。\nまとめ 家族や知り合いにノートPCを買いたいと相談されることが増え、\n面倒くさいので話が長くなっては悪いのでポイッと渡せる資料を作ろうと思ったのがきっかけで書き始めました。\n大変私見塗れの偏った記事ですので、ご意見等頂ければ幸いです。\n","permalink":"https://practice-member.github.io/nandemo-output-blog/blog/post-1/","tags":["",""],"title":"駆け出しエンジニアの書くノートPC購入時の観点メモ"}]