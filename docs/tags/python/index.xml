<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>python on 或いはバグでいっぱいのコード</title>
    <link>https://practice-member.github.io/nandemo-output-blog/tags/python/</link>
    <description>Recent content in python on 或いはバグでいっぱいのコード</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-JP</language>
    <lastBuildDate>Sun, 01 Aug 2021 14:10:54 +0000</lastBuildDate><atom:link href="https://practice-member.github.io/nandemo-output-blog/tags/python/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title> Pythonのソースの自動整形について</title>
      <link>https://practice-member.github.io/nandemo-output-blog/blog/post-37/</link>
      <pubDate>Sun, 01 Aug 2021 14:10:54 +0000</pubDate>
      
      <guid>https://practice-member.github.io/nandemo-output-blog/blog/post-37/</guid>
      <description>コーディングをする際のソースの自動整形について調べました。
yapf １つ目は yapf になります。 google社が作成しています</description>
    </item>
    
    <item>
      <title>Python用のlinterを検討してみた</title>
      <link>https://practice-member.github.io/nandemo-output-blog/blog/post-34/</link>
      <pubDate>Sun, 01 Aug 2021 14:10:44 +0000</pubDate>
      
      <guid>https://practice-member.github.io/nandemo-output-blog/blog/post-34/</guid>
      <description>「lint/linter」とは 「lint」とは、プログラムなどのソースコードを読み込んで内容を分析し、
問題点を指摘してくれる静的解析ツール。</description>
    </item>
    
    <item>
      <title>FastAPI 認証処理について</title>
      <link>https://practice-member.github.io/nandemo-output-blog/blog/post-24/</link>
      <pubDate>Sun, 28 Feb 2021 13:13:23 +0000</pubDate>
      
      <guid>https://practice-member.github.io/nandemo-output-blog/blog/post-24/</guid>
      <description>前提 本稿では、認証処理を「クライアントが誰であるかを確認する処理」とし、
主にログイン処理に使えるライブラリについて調べました。</description>
    </item>
    
    <item>
      <title>python デバッグ環境構築について調査しました</title>
      <link>https://practice-member.github.io/nandemo-output-blog/blog/post-18/</link>
      <pubDate>Sat, 06 Feb 2021 08:30:54 +0000</pubDate>
      
      <guid>https://practice-member.github.io/nandemo-output-blog/blog/post-18/</guid>
      <description>前提   Editor</description>
    </item>
    
    <item>
      <title>FastAPIを調べました</title>
      <link>https://practice-member.github.io/nandemo-output-blog/blog/post-17/</link>
      <pubDate>Sat, 06 Feb 2021 08:30:52 +0000</pubDate>
      
      <guid>https://practice-member.github.io/nandemo-output-blog/blog/post-17/</guid>
      <description>FastAPIとはなにか Pythonのフレームワークの一種です。
Pythonの代表的なフレームワークに下記があります。</description>
    </item>
    
    <item>
      <title>Flaskについて調べてみました</title>
      <link>https://practice-member.github.io/nandemo-output-blog/blog/post-16/</link>
      <pubDate>Sat, 06 Feb 2021 08:30:48 +0000</pubDate>
      
      <guid>https://practice-member.github.io/nandemo-output-blog/blog/post-16/</guid>
      <description>概要 「Flask」とは？
現在(2020/02/15)時点で、最も注目を集めている言語が「Python」です。</description>
    </item>
    
    <item>
      <title>Pythonの単体テスト用ツールについて</title>
      <link>https://practice-member.github.io/nandemo-output-blog/blog/post-12/</link>
      <pubDate>Sun, 31 Jan 2021 08:55:53 +0000</pubDate>
      
      <guid>https://practice-member.github.io/nandemo-output-blog/blog/post-12/</guid>
      <description>単体テストとは 人やプロジェクトごとに「単体テスト」の定義が違うことがあります。
 コードが正確であるか 単機能が正確であるか  言葉の定義は大事なので、自分が作成する「単体テスト」が、</description>
    </item>
    
  </channel>
</rss>
